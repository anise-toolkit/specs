/*
 * ANISE Toolkit
 * Copyright (C) 2021 Christopher Rabotin <christopher.rabotin@gmail.com> et al. (cf. AUTHORS.md)
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

namespace Anise.Common;

struct Vector3 {
    x: double;
    y: double;
    z: double;
}

// A quaternion is stored as its 3-component unit vector first (each component as a 32-bit float) and its half-angle (w) as a 64-bit float.
// As a unit vector, a 32-bit float should be (is?) sufficient to store a precise quaternion while saving space.
struct Quaternion {
    x: float;
    y: float;
    z: float;
    w: double;
}

table Constant {
    value:double;
    unit:string;
    comment:string;
}

table ConstantMap {
    keys:[string];
    values:[Constant];
}

enum InterpolationKind:ubyte {
    ChebyshevSeries = 0,
    HermiteSeries = 1,
    LagrangeSeries = 2,
    Polynomial = 3,
    Trigonometric = 4, // Sometimes called Fourier Series interpolation
}